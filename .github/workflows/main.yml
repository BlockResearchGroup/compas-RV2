# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 conda:
    name: Release-Windows
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v2
      
      - uses: goanpeca/setup-miniconda@v1
        with:
          miniconda-version: "latest"
          activate-environment: rv2
          python-version: 3.7
      
      - name: conda-install
        shell: PowerShell
        run: |
          conda install conda-pack cython -y
      
      - name: dependencies-install
        shell: PowerShell
        run: |
          pip install -r requirements.txt
      
      - name: rv2-install
        run: |
          python scripts/unzip_electron.py
          python ui\Rhino\RV2\dev\rui.py
          pip install .
      
      - name: rv2-pack
        run: |
          python scripts/pack.py --version ${{ github.ref }}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: dist/RV2_${{ github.ref }}.zip
          asset_name: RV2_${{ github.ref }}.zip
          asset_content_type: application/zip